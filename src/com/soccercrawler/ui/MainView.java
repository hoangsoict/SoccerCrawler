
package com.soccercrawler.ui;

import java.math.BigDecimal;
import java.util.Locale;

import com.soccercrawler.dal.SoccermatchDAO;
import com.soccercrawler.entities.SoccermatchTemp;
import com.soccercrawler.entities.SoccermatchTemp_;
import com.soccercrawler.util.Constant;
import com.soccercrawler.util.Utility;
import com.vaadin.ui.Button;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.TabSheet;
import com.xdev.ui.XdevButton;
import com.xdev.ui.XdevGridLayout;
import com.xdev.ui.XdevLabel;
import com.xdev.ui.XdevTabSheet;
import com.xdev.ui.XdevTextField;
import com.xdev.ui.XdevView;
import com.xdev.ui.entitycomponent.combobox.XdevComboBox;
import com.xdev.ui.entitycomponent.table.XdevTable;
import com.xdev.ui.filter.XdevContainerFilterComponent;
import com.xdev.util.ConverterBuilder;

public class MainView extends XdevView {

	/**
	 * 
	 */
	public MainView() {
		super();
		this.initUI();
		this.tabSheet.setSelectedTab(this.gridLayout);
		this.spreadBetMode.addItem("1Bet Mode");
		this.spreadBetMode.addItem("188Bet Mode");
		this.spreadBetMode.setValue("1Bet Mode");
		
		this.overUnderMode.addItem("1Bet Mode");
		this.overUnderMode.addItem("188Bet Mode");
		this.overUnderMode.setValue("1Bet Mode");
		
	}

	/**
	 * Event handler delegate method for the {@link XdevTabSheet} {@link #tabSheet}.
	 *
	 * @see TabSheet.SelectedTabChangeListener#selectedTabChange(TabSheet.SelectedTabChangeEvent)
	 * @eventHandlerDelegate Do NOT delete, used by UI designer!
	 */
	private void tabSheet_selectedTabChange(final TabSheet.SelectedTabChangeEvent event) {
	
	}

	/**
	 * Event handler delegate method for the {@link XdevButton} {@link #button}.
	 *
	 * @see Button.ClickListener#buttonClick(Button.ClickEvent)
	 * @eventHandlerDelegate Do NOT delete, used by UI designer!
	 */
	private void button_buttonClick(final Button.ClickEvent event) {
		this.resultLabel.setValue("");
		String mode = "";
		if("1Bet Mode".equals(this.spreadBetMode.getValue())){
			mode = Constant.ASIANODD_MODE_1BET;
		}else{
			mode = Constant.ASIANODD_MODE_188BET;
		}
		
		final BigDecimal currentOddsTeam1BD = Utility.mapStringToBigDecimal(this.currentOddsTeam1.getValue());
		final BigDecimal currentOddsTeam2BD = Utility.mapStringToBigDecimal(this.currentOddsTeam2.getValue());
		final BigDecimal currentSpreadTeam1BD = Utility.mapStringToBigDecimal(this.currentSpreadTeam1.getValue());
		final BigDecimal currentSpreadTeam2BD = Utility.mapStringToBigDecimal(this.currentSpreadTeam2.getValue());
		
		final BigDecimal openOddsTeam1BD = Utility.mapStringToBigDecimal(this.openOddsTeam1.getValue());
		final BigDecimal openOddsTeam2BD = Utility.mapStringToBigDecimal(this.openOddsTeam2.getValue());
		final BigDecimal openSpreadTeam1BD = Utility.mapStringToBigDecimal(this.openSpreadTeam1.getValue());
		final BigDecimal openSpreadTeam2BD = Utility.mapStringToBigDecimal(this.openSpreadTeam2.getValue());
		
		final String result = new SoccermatchDAO().searchSpreadOddsResult
				(mode, currentSpreadTeam1BD,			  currentOddsTeam1BD ,  openSpreadTeam1BD  , openOddsTeam1BD
						  ,currentSpreadTeam2BD ,  currentOddsTeam2BD  , openSpreadTeam2BD
						  ,openOddsTeam2BD);
		
		this.resultLabel.setValue(result);
	}

	/**
	 * Event handler delegate method for the {@link XdevButton} {@link #button2}.
	 *
	 * @see Button.ClickListener#buttonClick(Button.ClickEvent)
	 * @eventHandlerDelegate Do NOT delete, used by UI designer!
	 */
	private void button2_buttonClick(final Button.ClickEvent event) {

		this.resultOuLabel.setValue("");
		String mode = "";
		if("1Bet Mode".equals(this.overUnderMode.getValue())){
			mode = Constant.ASIANODD_MODE_1BET;
		}else{
			mode = Constant.ASIANODD_MODE_188BET;
		}
		
		final BigDecimal currentTotalLine = Utility.mapStringToBigDecimal(this.currentTotalLine.getValue());
		final BigDecimal openTotalLine = Utility.mapStringToBigDecimal(this.openTotalLine.getValue());
		
		final BigDecimal currentOuOddsTeam1 = Utility.mapStringToBigDecimal(this.currentOuOddsTeam1.getValue());
		final BigDecimal openOuOddsTeam1 = Utility.mapStringToBigDecimal(this.openOuOddsTeam1.getValue());
		final BigDecimal currentOuOddsTeam2 = Utility.mapStringToBigDecimal(this.currentOuOddsTeam2.getValue());
		final BigDecimal openOuOddsTeam2 = Utility.mapStringToBigDecimal(this.openOuOddsTeam2.getValue());
		
		final String result = new SoccermatchDAO().searchOverUnderResult(mode, currentTotalLine, openTotalLine,
				currentOuOddsTeam1, openOuOddsTeam1, currentOuOddsTeam2, openOuOddsTeam2);
		
		this.resultOuLabel.setValue(result);
	
	}

	/*
	 * WARNING: Do NOT edit!<br>The content of this method is always regenerated by
	 * the UI designer.
	 */
	// <generated-code name="initUI">
	private void initUI() {
		this.tabSheet = new XdevTabSheet();
		this.gridLayout = new XdevGridLayout();
		this.label = new XdevLabel();
		this.spreadBetMode = new XdevComboBox<>();
		this.label2 = new XdevLabel();
		this.label7 = new XdevLabel();
		this.label3 = new XdevLabel();
		this.label4 = new XdevLabel();
		this.label5 = new XdevLabel();
		this.label6 = new XdevLabel();
		this.label10 = new XdevLabel();
		this.currentSpreadTeam1 = new XdevTextField();
		this.currentOddsTeam1 = new XdevTextField();
		this.openSpreadTeam1 = new XdevTextField();
		this.openOddsTeam1 = new XdevTextField();
		this.label11 = new XdevLabel();
		this.currentSpreadTeam2 = new XdevTextField();
		this.currentOddsTeam2 = new XdevTextField();
		this.openSpreadTeam2 = new XdevTextField();
		this.openOddsTeam2 = new XdevTextField();
		this.button = new XdevButton();
		this.label8 = new XdevLabel();
		this.resultLabel = new XdevLabel();
		this.gridLayout3 = new XdevGridLayout();
		this.label9 = new XdevLabel();
		this.overUnderMode = new XdevComboBox<>();
		this.label12 = new XdevLabel();
		this.label15 = new XdevLabel();
		this.label13 = new XdevLabel();
		this.label14 = new XdevLabel();
		this.label18 = new XdevLabel();
		this.label19 = new XdevLabel();
		this.currentTotalLine = new XdevTextField();
		this.openTotalLine = new XdevTextField();
		this.label16 = new XdevLabel();
		this.currentOuOddsTeam1 = new XdevTextField();
		this.openOuOddsTeam1 = new XdevTextField();
		this.label17 = new XdevLabel();
		this.currentOuOddsTeam2 = new XdevTextField();
		this.openOuOddsTeam2 = new XdevTextField();
		this.button2 = new XdevButton();
		this.label21 = new XdevLabel();
		this.resultOuLabel = new XdevLabel();
		this.gridLayout2 = new XdevGridLayout();
		this.containerFilterComponent = new XdevContainerFilterComponent();
		this.table = new XdevTable<>();
	
		this.tabSheet.setStyleName("framed");
		this.label.setValue("Mode");
		this.spreadBetMode.setItemCaptionValue("");
		this.label2.setValue("Current");
		this.label7.setValue("Open");
		this.label3.setValue("Spread");
		this.label4.setValue("Odds");
		this.label5.setValue("Spread");
		this.label6.setValue("Odds");
		this.label10.setValue("Team 1");
		this.currentSpreadTeam1.setColumns(5);
		this.currentSpreadTeam1
				.setConverter(ConverterBuilder.stringToDouble().locale(Locale.forLanguageTag("en-GB")).build());
		this.currentOddsTeam1.setColumns(5);
		this.currentOddsTeam1
				.setConverter(ConverterBuilder.stringToDouble().locale(Locale.forLanguageTag("en-GB")).build());
		this.openSpreadTeam1.setColumns(5);
		this.openSpreadTeam1.setConverter(ConverterBuilder.stringToDouble().locale(Locale.forLanguageTag("en-GB")).build());
		this.openOddsTeam1.setColumns(5);
		this.openOddsTeam1.setConverter(ConverterBuilder.stringToDouble().locale(Locale.forLanguageTag("en-GB")).build());
		this.label11.setValue("Team 2");
		this.currentSpreadTeam2.setColumns(5);
		this.currentSpreadTeam2
				.setConverter(ConverterBuilder.stringToDouble().locale(Locale.forLanguageTag("en-GB")).build());
		this.currentOddsTeam2.setColumns(5);
		this.currentOddsTeam2
				.setConverter(ConverterBuilder.stringToDouble().locale(Locale.forLanguageTag("en-GB")).build());
		this.openSpreadTeam2.setColumns(5);
		this.openSpreadTeam2.setConverter(ConverterBuilder.stringToDouble().locale(Locale.forLanguageTag("en-GB")).build());
		this.openOddsTeam2.setColumns(5);
		this.openOddsTeam2.setConverter(ConverterBuilder.stringToDouble().locale(Locale.forLanguageTag("en-GB")).build());
		this.button.setCaption("Search");
		this.label8.setValue("Result");
		this.label9.setValue("Mode");
		this.overUnderMode.setItemCaptionValue("");
		this.label12.setValue("Total Line");
		this.label15.setValue("Over/Under");
		this.label13.setValue("Current");
		this.label14.setValue("Open");
		this.label18.setValue("Current");
		this.label19.setValue("Open");
		this.currentTotalLine.setColumns(5);
		this.currentTotalLine
				.setConverter(ConverterBuilder.stringToDouble().locale(Locale.forLanguageTag("en-GB")).build());
		this.openTotalLine.setColumns(5);
		this.openTotalLine.setConverter(ConverterBuilder.stringToDouble().locale(Locale.forLanguageTag("en-GB")).build());
		this.label16.setValue("Team 1");
		this.currentOuOddsTeam1.setColumns(5);
		this.currentOuOddsTeam1
				.setConverter(ConverterBuilder.stringToDouble().locale(Locale.forLanguageTag("en-GB")).build());
		this.openOuOddsTeam1.setColumns(5);
		this.openOuOddsTeam1.setConverter(ConverterBuilder.stringToDouble().locale(Locale.forLanguageTag("en-GB")).build());
		this.label17.setValue("Team 2");
		this.currentOuOddsTeam2.setColumns(5);
		this.currentOuOddsTeam2
				.setConverter(ConverterBuilder.stringToDouble().locale(Locale.forLanguageTag("en-GB")).build());
		this.openOuOddsTeam2.setColumns(5);
		this.openOuOddsTeam2.setConverter(ConverterBuilder.stringToDouble().locale(Locale.forLanguageTag("en-GB")).build());
		this.button2.setCaption("Search");
		this.label21.setValue("Result");
		this.table.setColumnReorderingAllowed(true);
		this.table.setColumnCollapsingAllowed(true);
		this.table.setContainerDataSource(SoccermatchTemp.class);
		this.table.setVisibleColumns(SoccermatchTemp_.mode.getName(), SoccermatchTemp_.nameTeam1.getName(),
				SoccermatchTemp_.nameTeam2.getName(), SoccermatchTemp_.spreadBetWinPercent.getName(),
				SoccermatchTemp_.ouBetWinPercent.getName(), SoccermatchTemp_.spreadBetTotalCount.getName(),
				SoccermatchTemp_.ouBetTotalCount.getName(), SoccermatchTemp_.createdDate.getName(),
				SoccermatchTemp_.currentSpreadTeam1.getName(), SoccermatchTemp_.currentOddsTeam1.getName(),
				SoccermatchTemp_.openSpreadTeam1.getName(), SoccermatchTemp_.openOddsTeam1.getName(),
				SoccermatchTemp_.currentSpreadTeam2.getName(), SoccermatchTemp_.currentOddsTeam2.getName(),
				SoccermatchTemp_.openSpreadTeam2.getName(), SoccermatchTemp_.openOddsTeam2.getName(),
				SoccermatchTemp_.currentTotalLine.getName(), SoccermatchTemp_.openTotalLine.getName(),
				SoccermatchTemp_.currentOuOddsTeam1.getName(), SoccermatchTemp_.openOuOddsTeam1.getName(),
				SoccermatchTemp_.currentOuOddsTeam2.getName(), SoccermatchTemp_.openOuOddsTeam2.getName());
		this.table.setColumnCollapsed("currentSpreadTeam1", true);
		this.table.setColumnCollapsed("currentOddsTeam1", true);
		this.table.setColumnCollapsed("openSpreadTeam1", true);
		this.table.setColumnCollapsed("openOddsTeam1", true);
		this.table.setColumnCollapsed("currentSpreadTeam2", true);
		this.table.setColumnCollapsed("currentOddsTeam2", true);
		this.table.setColumnCollapsed("openSpreadTeam2", true);
		this.table.setColumnCollapsed("openOddsTeam2", true);
		this.table.setColumnCollapsed("currentTotalLine", true);
		this.table.setColumnCollapsed("openTotalLine", true);
		this.table.setColumnCollapsed("currentOuOddsTeam1", true);
		this.table.setColumnCollapsed("openOuOddsTeam1", true);
		this.table.setColumnCollapsed("currentOuOddsTeam2", true);
		this.table.setColumnCollapsed("openOuOddsTeam2", true);
	
		this.containerFilterComponent.setContainer(this.table.getBeanContainerDataSource(), "mode", "nameTeam1",
				"nameTeam2", "spreadBetWinPercent", "ouBetWinPercent", "spreadBetTotalCount", "ouBetTotalCount",
				"createdDate");
		this.containerFilterComponent.setSearchableProperties("mode", "nameTeam1", "nameTeam2");
	
		this.gridLayout.setColumns(6);
		this.gridLayout.setRows(8);
		this.label.setSizeUndefined();
		this.gridLayout.addComponent(this.label, 1, 0);
		this.spreadBetMode.setSizeUndefined();
		this.gridLayout.addComponent(this.spreadBetMode, 2, 0);
		this.label2.setSizeUndefined();
		this.gridLayout.addComponent(this.label2, 1, 1);
		this.label7.setSizeUndefined();
		this.gridLayout.addComponent(this.label7, 3, 1);
		this.label3.setSizeUndefined();
		this.gridLayout.addComponent(this.label3, 1, 2);
		this.label4.setSizeUndefined();
		this.gridLayout.addComponent(this.label4, 2, 2);
		this.label5.setSizeUndefined();
		this.gridLayout.addComponent(this.label5, 3, 2);
		this.label6.setSizeUndefined();
		this.gridLayout.addComponent(this.label6, 4, 2);
		this.label10.setSizeUndefined();
		this.gridLayout.addComponent(this.label10, 0, 3);
		this.currentSpreadTeam1.setSizeUndefined();
		this.gridLayout.addComponent(this.currentSpreadTeam1, 1, 3);
		this.currentOddsTeam1.setSizeUndefined();
		this.gridLayout.addComponent(this.currentOddsTeam1, 2, 3);
		this.openSpreadTeam1.setSizeUndefined();
		this.gridLayout.addComponent(this.openSpreadTeam1, 3, 3);
		this.openOddsTeam1.setSizeUndefined();
		this.gridLayout.addComponent(this.openOddsTeam1, 4, 3);
		this.label11.setSizeUndefined();
		this.gridLayout.addComponent(this.label11, 0, 4);
		this.currentSpreadTeam2.setSizeUndefined();
		this.gridLayout.addComponent(this.currentSpreadTeam2, 1, 4);
		this.currentOddsTeam2.setSizeUndefined();
		this.gridLayout.addComponent(this.currentOddsTeam2, 2, 4);
		this.openSpreadTeam2.setSizeUndefined();
		this.gridLayout.addComponent(this.openSpreadTeam2, 3, 4);
		this.openOddsTeam2.setSizeUndefined();
		this.gridLayout.addComponent(this.openOddsTeam2, 4, 4);
		this.button.setSizeUndefined();
		this.gridLayout.addComponent(this.button, 1, 5);
		this.label8.setSizeUndefined();
		this.gridLayout.addComponent(this.label8, 0, 6);
		this.resultLabel.setSizeUndefined();
		this.gridLayout.addComponent(this.resultLabel, 1, 6);
		final CustomComponent gridLayout_hSpacer = new CustomComponent();
		gridLayout_hSpacer.setSizeFull();
		this.gridLayout.addComponent(gridLayout_hSpacer, 5, 0, 5, 6);
		this.gridLayout.setColumnExpandRatio(5, 1.0F);
		final CustomComponent gridLayout_vSpacer = new CustomComponent();
		gridLayout_vSpacer.setSizeFull();
		this.gridLayout.addComponent(gridLayout_vSpacer, 0, 7, 4, 7);
		this.gridLayout.setRowExpandRatio(7, 1.0F);
		this.gridLayout3.setColumns(7);
		this.gridLayout3.setRows(8);
		this.label9.setSizeUndefined();
		this.gridLayout3.addComponent(this.label9, 1, 0);
		this.overUnderMode.setSizeUndefined();
		this.gridLayout3.addComponent(this.overUnderMode, 2, 0);
		this.label12.setSizeUndefined();
		this.gridLayout3.addComponent(this.label12, 1, 1);
		this.label15.setSizeUndefined();
		this.gridLayout3.addComponent(this.label15, 4, 1);
		this.label13.setSizeUndefined();
		this.gridLayout3.addComponent(this.label13, 1, 2);
		this.label14.setSizeUndefined();
		this.gridLayout3.addComponent(this.label14, 2, 2);
		this.label18.setSizeUndefined();
		this.gridLayout3.addComponent(this.label18, 4, 2);
		this.label19.setSizeUndefined();
		this.gridLayout3.addComponent(this.label19, 5, 2);
		this.currentTotalLine.setSizeUndefined();
		this.gridLayout3.addComponent(this.currentTotalLine, 1, 3);
		this.openTotalLine.setSizeUndefined();
		this.gridLayout3.addComponent(this.openTotalLine, 2, 3);
		this.label16.setSizeUndefined();
		this.gridLayout3.addComponent(this.label16, 3, 3);
		this.currentOuOddsTeam1.setSizeUndefined();
		this.gridLayout3.addComponent(this.currentOuOddsTeam1, 4, 3);
		this.openOuOddsTeam1.setSizeUndefined();
		this.gridLayout3.addComponent(this.openOuOddsTeam1, 5, 3);
		this.label17.setSizeUndefined();
		this.gridLayout3.addComponent(this.label17, 3, 4);
		this.currentOuOddsTeam2.setSizeUndefined();
		this.gridLayout3.addComponent(this.currentOuOddsTeam2, 4, 4);
		this.openOuOddsTeam2.setSizeUndefined();
		this.gridLayout3.addComponent(this.openOuOddsTeam2, 5, 4);
		this.button2.setSizeUndefined();
		this.gridLayout3.addComponent(this.button2, 1, 5);
		this.label21.setSizeUndefined();
		this.gridLayout3.addComponent(this.label21, 0, 6);
		this.resultOuLabel.setSizeUndefined();
		this.gridLayout3.addComponent(this.resultOuLabel, 1, 6);
		final CustomComponent gridLayout3_hSpacer = new CustomComponent();
		gridLayout3_hSpacer.setSizeFull();
		this.gridLayout3.addComponent(gridLayout3_hSpacer, 6, 0, 6, 6);
		this.gridLayout3.setColumnExpandRatio(6, 1.0F);
		final CustomComponent gridLayout3_vSpacer = new CustomComponent();
		gridLayout3_vSpacer.setSizeFull();
		this.gridLayout3.addComponent(gridLayout3_vSpacer, 0, 7, 5, 7);
		this.gridLayout3.setRowExpandRatio(7, 1.0F);
		this.gridLayout2.setColumns(1);
		this.gridLayout2.setRows(2);
		this.containerFilterComponent.setWidth(100, Unit.PERCENTAGE);
		this.containerFilterComponent.setHeight(-1, Unit.PIXELS);
		this.gridLayout2.addComponent(this.containerFilterComponent, 0, 0);
		this.table.setSizeFull();
		this.gridLayout2.addComponent(this.table, 0, 1);
		this.gridLayout2.setColumnExpandRatio(0, 100.0F);
		this.gridLayout2.setRowExpandRatio(1, 100.0F);
		this.gridLayout.setSizeFull();
		this.tabSheet.addTab(this.gridLayout, "Spread Bet", null);
		this.gridLayout3.setSizeFull();
		this.tabSheet.addTab(this.gridLayout3, "Over Under Bet", null);
		this.gridLayout2.setSizeFull();
		this.tabSheet.addTab(this.gridLayout2, "Result", null);
		this.tabSheet.setSelectedTab(this.gridLayout2);
		this.tabSheet.setSizeFull();
		this.setContent(this.tabSheet);
		this.setSizeFull();
	
		this.tabSheet.addSelectedTabChangeListener(event -> this.tabSheet_selectedTabChange(event));
		this.button.addClickListener(event -> this.button_buttonClick(event));
		this.button2.addClickListener(event -> this.button2_buttonClick(event));
	} // </generated-code>

	// <generated-code name="variables">
	private XdevLabel label, label2, label7, label3, label4, label5, label6, label10, label11, label8, resultLabel, label9,
			label12, label15, label13, label14, label18, label19, label16, label17, label21, resultOuLabel;
	private XdevButton button, button2;
	private XdevComboBox<?> spreadBetMode, overUnderMode;
	private XdevTabSheet tabSheet;
	private XdevGridLayout gridLayout, gridLayout3, gridLayout2;
	private XdevTextField currentSpreadTeam1, currentOddsTeam1, openSpreadTeam1, openOddsTeam1, currentSpreadTeam2,
			currentOddsTeam2, openSpreadTeam2, openOddsTeam2, currentTotalLine, openTotalLine, currentOuOddsTeam1,
			openOuOddsTeam1, currentOuOddsTeam2, openOuOddsTeam2;
	private XdevTable<SoccermatchTemp> table;
	private XdevContainerFilterComponent containerFilterComponent;
	// </generated-code>

}
